<application>
  <component name="AppStorage">
    <histories>
      <item value="ERROR: spyder 3.3.2 has requirement pyqt5&lt;5.10; python_version &gt;= &quot;3&quot;, but you'll have pyqt5 5.10.1 which is incompatible. ERROR: spyder 3.3.2 has requirement spyder-kernels&lt;1.0, but you'll have spyder-kernels 1.3.2 which is incompatible. " />
      <item value="=&gt; WARNING: A newer version of conda exists. &lt;== current version: 4.6.8 latest version: 4.6.14 Please update conda by running $ conda update -n base -c defaults conda" />
      <item value="RemoveError: 'setuptools' is a dependency of conda and cannot be removed from" />
      <item value="tendent" />
      <item value="shown" />
      <item value="Provisional " />
      <item value="No space left on device" />
      <item value="provider" />
      <item value="{address space usage: 530145280 bytes/505MB} {rss usage: 53854208 bytes/51MB} [pid: 28769|app: 0|req: 7/8] 10.10.10.43 () {38 vars in 650 bytes} [Mon May 27 13:42:29 2019] GET /article?url=https://weibo.com/6491728198/Hw7bg3oF2?refer_flag=1001030103_&amp;type=comment =&gt; generated 32 bytes in 1471 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 1) " />
      <item value="org.apache.hadoop.hbase.regionserver.NoSuchColumnFamilyException: Column family wb does not exist in region WEIBO_USER_TABLE,6450585192,1558500977607.87aae1175568fcec14731ee8a689ba3d. in table 'WEIBO_USER_TABLE', {NAME =&gt; 'wa', BLOOMFILTER =&gt; 'ROW', VERSIONS =&gt; '2', IN_MEMORY =&gt; 'false', KEEP_DELETED_CELLS =&gt; 'FALSE', DATA_BLOCK_ENCODING =&gt; 'NONE', TTL =&gt; 'FOREVER', COMPRESSION =&gt; 'NONE', MIN_VERSIONS =&gt; '0', BLOCKCACHE =&gt; 'true', BLOCKSIZE =&gt; '65536', REPLICATION_SCOPE =&gt; '1'}" />
      <item value="TypeError: not all arguments converted during string formatting" />
      <item value="Arguments" />
      <item value="Message" />
      <item value="interchangeable" />
      <item value="通用" />
      <item value="通用的" />
      <item value="ait for child process to terminate.  Returns returncode " />
      <item value="ait for child process to terminate.  Returns returncode             attribute" />
      <item value="REPEATED" />
      <item value="field" />
      <item value="record" />
      <item value="REPEATED TITLE DETECTION" />
      <item value="SITE RECORD" />
      <item value="weiwb" />
      <item value="sign" />
      <item value="ModuleNotFoundError: No module named '_bz2'" />
      <item value="redis.exceptions.ResponseError: wrong number of arguments for 'lpush' command" />
      <item value="scheme" />
      <item value="reward" />
      <item value="reward_scheme" />
      <item value="月份" />
      <item value="montch" />
      <item value="May" />
      <item value="Tue" />
      <item value="reward scheme" />
      <item value="单独的" />
      <item value="statuses" />
      <item value="Connection to an HBase Thrift server. The `host` and `port` arguments specify the host name and TCP port of the HBase Thrift server to connect to. If omitted or ``None``, a connection to the default port on ``localhost`` is made. If specifed, the `timeout` argument specifies the socket timeout in milliseconds. If `autoconnect` is `True` (the default) the connection is made directly, otherwise :py:meth:`Connection.open` must be called explicitly before first use. The optional `table_prefix` and `table_prefix_separator` arguments specify a prefix and a separator string to be prepended to all table names, e.g. when :py:meth:`Connection.table` is invoked. For example, if `table_prefix` is ``myproject``, all tables will have names like ``myproject_XYZ``. The optional `compat` argument sets the compatibility level for this connection. Older HBase versions have slightly different Thrift interfaces, and using the wrong protocol can lead to crashes caused by communication errors, so make sure to use the correct one. This value can be either the string ``0.90``, ``0.92``, ``0.94``, or ``0.96`` (the default). The optional `transport` argument specifies the Thrift transport mode to use. Supported values for this argument are ``buffered`` (the default) and ``framed``. Make sure to choose the right one, since otherwise you might see non-obvious connection errors or program hangs when making a connection. HBase versions before 0.94 always use the buffered transport. Starting with HBase 0.94, the Thrift server optionally uses a framed transport, depending on the argument passed to the ``hbase-daemon.sh start thrift`` command. The default ``-threadpool`` mode uses the buffered transport; the ``-hsha``, ``-nonblocking``, and ``-threadedselector`` modes use the framed transport. The optional `protocol` argument specifies the Thrift transport protocol to use. Supported values for this argument are ``binary`` (the default) and ``compact``. Make sure to choose the right one, since otherwise you might see non-obvious connection errors or program hangs when making a connection. ``TCompactProtocol`` is a more compact binary format that is typically more efficient to process as well. ``TBinaryProtocol`` is the default protocol that Happybase uses. .. versionadded:: 0.9 `protocol` argument .. versionadded:: 0.5 `timeout` argument .. versionadded:: 0.4 `table_prefix_separator` argument .. versionadded:: 0.4 support for framed Thrift transports :param str host: The host to connect to :param int port: The port to connect to :param int timeout: The socket timeout in milliseconds (optional) :param bool autoconnect: Whether the connection should be opened directly :param str table_prefix: Prefix used to construct table names (optional) :param str table_prefix_separator: Separator used for `table_prefix` :param str compat: Compatibility mode (optional) :param str transport: Thrift transport mode (optional)" />
      <item value="EXCEPTION" />
      <item value="T Message Type" />
      <item value="&quot;&quot;Return a list of table names available in this HBase instance. If a `table_prefix` was set for this :py:class:`Connection`, only tables that have the specified prefix will be listed. :return: The table names :rtype: List of strings" />
      <item value="wait result only if non-oneway" />
      <item value="Parameters: - table: the table to append the value on - tappend: the TAppend to append" />
      <item value="elasticsearch.exceptions.RequestError: RequestError(400, 'parsing_exception', '[term] query does not support array of values')" />
      <item value="elasticsearch.exceptions.AuthenticationException: TransportError(401, 'security_exception', 'unable to authenticate user [] for REST request [/wb_info/sino/_search]')" />
      <item value="security exception" />
      <item value="verify" />
      <item value="验证" />
      <item value="TransportError(400, 'mapper_parsing_exception', 'failed to parse [like_num]')" />
      <item value="Data too long for column 'makeValue' at row 1" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="213" />
        <entry key="ENGLISH" value="213" />
        <entry key="GERMAN" value="1" />
        <entry key="FRENCH" value="2" />
        <entry key="HAITIAN_CREOLE" value="3" />
        <entry key="ROMANIAN" value="2" />
        <entry key="SWEDISH" value="4" />
        <entry key="TELUGU" value="1" />
        <entry key="TURKISH" value="1" />
        <entry key="SPANISH" value="1" />
        <entry key="ITALIAN" value="1" />
        <entry key="HINDI" value="2" />
      </map>
    </option>
  </component>
</application>