<application>
  <component name="AppStorage">
    <histories>
      <item value="DEVNULL" />
      <item value="questHandler worker: exiting cleanly" />
      <item value="2019-07-24 11:42:30 [pykafka.handlers] info: RequestHandler worker: exiting cleanly" />
      <item value="UserWarning: There are several spiders with the same name:" />
      <item value="间隔" />
      <item value="game Stream Info List" />
      <item value="TypeError: __init__() got an unexpected keyword argument 'html'" />
      <item value="buss Type" />
      <item value="Channel" />
      <item value="live Channel" />
      <item value="channel" />
      <item value="ValueError: too many values to unpack (expected 2)" />
      <item value="profile Room" />
      <item value="short Channel" />
      <item value="recommend Status" />
      <item value="2089872738" />
      <item value="private Host" />
      <item value="activity Count" />
      <item value="screenshot" />
      <item value="camera Open" />
      <item value="profile Home Host" />
      <item value="KeyError: 'UserItem does not support field: itme'" />
      <item value="同步字段" />
      <item value="同步" />
      <item value="builtins.AttributeError: can't set attribute" />
      <item value="AttributeError: can't set attribute" />
      <item value="Unknown command: crawl Use &quot;scrapy&quot; to see available commands" />
      <item value="copeManagement.models.DataClassTwo.MultipleObjectsReturned: get() returned more than one DataClassTwo -- it returned 3!" />
      <item value="ScopeManagement.models.DataClassOne.MultipleObjectsReturned: get() returned more than one DataClassOne -- it returned 2!" />
      <item value="Data Class One" />
      <item value="Error: That port is already in use." />
      <item value="ment.models.DataClassTwo.DoesNotExist: DataClassTwo matching query does not exist.'" />
      <item value="save Zd Account" />
      <item value="collect Status" />
      <item value="UnboundLocalError: local variable 'os' referenced before assignment" />
      <item value="time last" />
      <item value="Abstract base class for all schedulers. Takes the following keyword arguments: :param str|logging.Logger logger: logger to use for the scheduler's logging (defaults to apscheduler.scheduler) :param str|datetime.tzinfo timezone: the default time zone (defaults to the local timezone) :param int|float jobstore_retry_interval: the minimum number of seconds to wait between retries in the scheduler's main loop if the job store raises an exception when getting the list of due jobs :param dict job_defaults: default values for newly added jobs :param dict jobstores: a dictionary of job store alias -&gt; job store instance or configuration dict :param dict executors: a dictionary of executor alias -&gt; executor instance or configuration dict :ivar int state: current running state of the scheduler (one of the following constants from ``apscheduler.schedulers.base``: ``STATE_STOPPED``, ``STATE_RUNNING``, ``STATE_PAUSED``) .. seealso:: :ref:`scheduler-config`" />
      <item value="retries in the scheduler's main loop if the job store raises an exception when getting the list of due jobs :param dict job_defaults: default values for newly added jobs :param dict jobstores: a dictionary of job store alias -&gt; job store instance or configuration dict :param dict executors: a dictionary of executor alias -&gt; executor instance or configuration dict :ivar int state: current running state of the scheduler (one of the following constants from ``apscheduler.schedulers.base``: ``STATE_STOPPED``, ``STAT" />
      <item value="INFO:apscheduler.scheduler:Scheduler started&#10;DEBUG:apscheduler.scheduler:Looking for jobs to run" />
      <item value="cmd transfer web" />
      <item value="DEBUG:apscheduler.scheduler:Next wakeup is due at 2019-07-19 16:39:19.230000+00:00 (in 28799.947000 seconds)" />
      <item value="DEBUG:apscheduler.scheduler:Looking for jobs to run" />
      <item value="The &quot;db&quot; parameter must not be empty'" />
      <item value="INFO:apscheduler.scheduler:Added job &quot;interval_ypzs_account&quot; to job store &quot;default&quot;" />
      <item value="INFO:apscheduler.scheduler:Adding job tentatively -- it will be properly scheduled when the scheduler starts" />
      <item value="LookupError: No trigger by the name &quot;ypzsAccountinterval&quot; was found" />
      <item value="ImportError: cannot import name 'utc'" />
      <item value="ImportError: MongoDBJobStore requires PyMongo installed" />
      <item value="Py Mongo" />
      <item value="Mongo DB Job Store" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="497" />
        <entry key="ENGLISH" value="498" />
        <entry key="DANISH" value="2" />
        <entry key="GERMAN" value="1" />
        <entry key="FRENCH" value="2" />
        <entry key="HAITIAN_CREOLE" value="3" />
        <entry key="CORSICAN" value="1" />
        <entry key="ROMANIAN" value="2" />
        <entry key="SWEDISH" value="6" />
        <entry key="TELUGU" value="1" />
        <entry key="TURKISH" value="1" />
        <entry key="SPANISH" value="2" />
        <entry key="HUNGARIAN" value="1" />
        <entry key="ITALIAN" value="2" />
        <entry key="HINDI" value="3" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="baiduTranslateSettings">
      <app-key>
        <option name="appId" value="20180726000189099" />
        <option name="appKeyConfigured" value="true" />
      </app-key>
    </option>
    <option name="googleTranslateSettings">
      <google-translate>
        <option name="useTranslateGoogleCom" value="true" />
      </google-translate>
    </option>
    <option name="ignoreRegExp" value="" />
    <option name="translator" value="fanyi.baidu" />
  </component>
</application>