<application>
  <component name="AppStorage">
    <histories>
      <item value="extract stack" />
      <item value="format exception" />
      <item value="extract tb" />
      <item value="result" />
      <item value="DJANGO URL" />
      <item value="serialize" />
      <item value="succeed" />
      <item value="succen list" />
      <item value="succend" />
      <item value="host Unit Type" />
      <item value="record" />
      <item value="service Providers" />
      <item value="area" />
      <item value="site" />
      <item value="inner" />
      <item value="hbase exception: line:94 :TIOError(message=&quot;Failed 1 action: org.apache.hadoop.hbase.regionserver.NoSuchColumnFamilyException: Column family wa does not exist in region BLOCK_TABLE,,1542279902804.888baa261f264515f6c146a658e7ae8d. in table 'BLOCK_TABLE', {NAME =&gt; 'ba', BLOOMFILTER =&gt; 'ROW', VERSIONS =&gt; '2', IN_MEMORY =&gt; 'false', KEEP_DELETED_CELLS =&gt; 'FALSE', DATA_BLOCK_ENCODING =&gt; 'NONE', TTL =&gt; 'FOREVER', COMPRESSION =&gt; 'NONE', MIN_VERSIONS =&gt; '0', BLOCKCACHE =&gt; 'true', BLOCKSIZE =&gt; '65536', REPLICATION_SCOPE =&gt; '0'}\n\tat org.apache.hadoop.hbase.regionserver.RSRpcServices.doBatchOp(RSRpcServices.java:765)\n\tat org.apache.hadoop.hbase.regionserver.RSRpcServices.doNonAtomicRegionMutation(RSRpcServices.java:720)\n\tat org.apache.hadoop.hbase.regionserver.RSRpcServices.multi(RSRpcServices.java:2168)\n\tat org.apache.hadoop.hbase.protobuf.generated.ClientProtos$ClientService$2.callBlockingMethod(ClientProtos.java:33656)\n\tat org.apache.hadoop.hbase.ipc.RpcServer.call(RpcServer.java:2188)\n\tat org.apache.hadoop.hbase.ipc.CallRunner.run(CallRunner.java:112)\n\tat org.apache.hadoop.hbase.ipc.RpcExecutor.consumerLoop(RpcExecutor.java:133)\n\tat org.apache.hadoop.hbase.ipc.RpcExecutor$1.run(RpcExecutor.java:108)\n\tat java.lang.Thread.run(Thread.java:748)\n: 1 time," />
      <item value="partition" />
      <item value="k partition" />
      <item value="meta dict" />
      <item value="Upload a buffer to Storage server. arguments: @filebuffer: string @file_ext_name: string, can be null @meta_dict: dictionary, can be null @return dict { 'Group name' : group_name, 'Remote file_id' : remote_file_id, 'Status' : 'Upload successed" />
      <item value="Upload a file to Storage server. arguments: @filename: string, name of file that will be uploaded @meta_dict: dictionary e.g.:{ 'ext_name' : 'jpg', 'file_size' : '10240B', 'width' : '160px', 'hight' : '80px' } meta_dict can be null @return dict { 'Group name' : group_name, 'Remote file_id' : remote_file_id, 'Status' : 'Upload successed.', 'Local file name' : local_file_name, 'Uploaded size' : upload_size, 'Storage IP' : storage_ip } if success else None" />
      <item value="毫秒" />
      <item value="秒" />
      <item value="分钟" />
      <item value="print(value, ..., sep=' ', end='\n', file=sys.stdout, flush=False) Prints the values to a stream, or to sys.stdout by default. Optional keyword arguments: file: a file-like object (stream); defaults to the current sys.stdout. sep: string inserted between values, default a space. end: string appended after the last value, default a newline. flush: whether to forcibly flush the stream." />
      <item value="spider key" />
      <item value="其他" />
      <item value="The message in the transport are encoded as this: 4 bytes represents the length of the json object and immediately followed by the json object. '\x00\x00\x00+' '{&quot;payload&quot;: {}, &quot;metadata&quot;: {&quot;version&quot;: 1}}' the 4 bytes are the bytes representation of an integer and is encoded in big-endian." />
      <item value="failed" />
      <item value="exception" />
      <item value="T Application Exception" />
      <item value="https" />
      <item value="http" />
      <item value="hriftPy does not support generating module ' 'with path in protocol" />
      <item value="include dir" />
      <item value="module name" />
      <item value="Load thrift file as a module. The module loaded and objects inside may only be pickled if module_name was provided. Note: `include_dir` will be depreacated in the future, use `include_dirs` instead. If `include_dir` was provided (not None), it will be appended to `include_dirs`." />
      <item value="resource filename" />
      <item value="_pkg resources" />
      <item value="protocol" />
      <item value="module" />
      <item value="generating" />
      <item value="support" />
      <item value="Thrift Parser Error" />
      <item value="parser" />
      <item value="thriftpy" />
      <item value="Access Control" />
      <item value="_descriptor" />
      <item value="zkquorum (str): Zookeeper quorum. Comma-separated list of hosts to connect to." />
      <item value="zkquorum" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="73" />
        <entry key="ENGLISH" value="74" />
        <entry key="GALICIAN" value="1" />
        <entry key="LATIN" value="2" />
        <entry key="LUXEMBOURGISH" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
  </component>
</application>