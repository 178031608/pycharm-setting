<application>
  <component name="AppStorage">
    <histories>
      <item value="AuthenticationException" />
      <item value="AuthenticationException: TransportError(401, 'security_exception', 'unable to authenticate user [] for " />
      <item value="elasticsearch.exceptions.AuthenticationException: TransportError(401, 'security_exception', 'unable to authenticate user [] for " />
      <item value="elasticsearch.exceptions.AuthenticationException: TransportError(401, 'security_exception', 'unable to authenticate user [] for REST request [/wb_info/sino/_search?size=10]')" />
      <item value="TypeError: search() got an unexpected keyword argument 'doc_type'" />
      <item value="peportdata" />
      <item value="TypeError: filter() got an unexpected keyword argument 'DataType'" />
      <item value="Report" />
      <item value="tools" />
      <item value="verify" />
      <item value="is Active" />
      <item value="分析" />
      <item value="fdfs_client.exceptions.DataError: Error: 22, Invalid argument" />
      <item value="getaddrinfo(host, port [, family, type, proto, flags]) -&gt; list of (family, type, proto, canonname, sockaddr) Resolve host and port into addrinfo struct." />
      <item value="TypeError: getaddrinfo() argument 1 must be string or None" />
      <item value="Delete a file from Storage server. arguments: @remote_file_id: string, file_id of file that is on storage server @return tuple ('Delete file successed.', remote_file_id, storage_ip)" />
      <item value="remote file id" />
      <item value="remote filename" />
      <item value="Delete file from storage server." />
      <item value="store serv" />
      <item value="index" />
      <item value="Storage server" />
      <item value="REPR OUTPUT SIZE" />
      <item value="language chinese" />
      <item value="chromeless" />
      <item value="sleep interval between calls By default, it is 0.5 second." />
      <item value="&quot;&quot;&quot;Constructor, takes a WebDriver instance and timeout in seconds. :Args: - driver - Instance of WebDriver (Ie, Firefox, Chrome or Remote) - timeout - Number of seconds before timing out - poll_frequency - sleep interval between calls By default, it is 0.5 second. - ignored_exceptions - iterable structure of exception classes ignored during calls. By default, it contains NoSuchElementException only." />
      <item value="An expectation for checking that the title contains a case-sensitive substring. title is the fragment of title expected returns True when the title matches, False otherwise" />
      <item value="An expectation for checking that the title contains a case-sensitive substring. title is the fragment of title expected return" />
      <item value="implicitly wait" />
      <item value="execute script" />
      <item value="pythontip" />
      <item value="Broken pipe" />
      <item value="No space left on device" />
      <item value="'LiveDanmuCrawler' object has no attribute 'kafak" />
      <item value="Live Video Crawler" />
      <item value="Arguments: topic (str): topic where the message will be published value (optional): message value. Must be type bytes, or be serializable to bytes via configured value_serializer. If value is None, key is required and message acts as a 'delete'. See kafka compaction documentation for more details: https://kafka.apache.org/documentation.html#compaction (compaction requires kafka &gt;= 0.8.1) partition (int, optional): optionally specify a partition. If not set, the partition will be selected using the configured 'partitioner'. key (optional): a key to associate with the message. Can be used to determine which partition to send the message to. If partition is None (and producer's partitioner config is left as default), then messages with the same key will be delivered to the same partition (but if key is None, partition is chosen randomly). Must be type bytes, or be serializable to bytes via configured key_serializer. headers (optional): a list of header key value pairs. List items are tuples of str key and bytes value. timestamp_ms (int, optional): epoch milliseconds (from Jan 1 1970 UTC) to use as the message timestamp. Defaults to current time. Returns:" />
      <item value="Kafka Producer Client" />
      <item value="(optional): a key to associate with the message. Can be used to determine which partition to send the message to. If partition is None (and producer's partitioner config is left as default), then messages with the same key will be delivered to the same partition (but if key is None, partition is chosen randomly). Must be type bytes, or be serializable to bytes via configured key_serializer." />
      <item value="classification" />
      <item value="tendentiousness" />
      <item value="pipeprofen on github | report an issue Run a bash shell command on the selected lines. Execute a bash process that pipes the selected lines as if they were an input file, same as stdin, through a custom bash shell command. The output from the process replaces the selection with stderr and stdout. Works with multiple carets by piping each selection region separately into their own process. Also works with no carets. General usage instructions Invoke with ctrl-alt-shift-x, or by selecting text and right-click the editor to show the context menu. The menu item is called Pipe selected text to bash. When no lines are selected, use the keyboard shortcut to open the bash argument window. Demo Features Remembers the last command arguments Treats output containing either stderr and stdout the same Works with multiple carets, 1 caret and no carets Bug-free on Linux and Windows Actively supported - open an issue on github Unlicensed, free public domain source Note: you must have bash in your environment's PATH. Being able to run anything in the editor and change the buffer text was heavily inspired by emacs's lisp expressions (eval-last-sexp), (eval-defun) and (eval-expression). This plugin is intended to be a drop-in replacement for the antiquated Shell Process plugin" />
      <item value="pipeprofen on github | report an issue&#10;Run a bash shell command on the selected lines. Execute a bash process that pipes the selected lines as if they were an input file, same as stdin, through a custom bash shell command. The output from the process replaces the selection with stderr and stdout. Works with multiple carets by piping each selection region separately into their own process. Also works with no carets.&#10;General usage instructions Invoke with ctrl-alt-shift-x, or by selecting text and right-click the editor to show the context menu. The menu item is called Pipe selected text to bash. When no lines are selected, use the keyboard shortcut to open the bash argument window.&#10;Demo Features&#10;Remembers the last command arguments&#10;Treats output containing either stderr and stdout the same&#10;Works with multiple carets, 1 caret and no carets&#10;Bug-free on Linux and Windows&#10;Actively supported - open an issue on github&#10;Unlicensed, free public domain source Note: you must have bash in your environment's PATH.&#10;Being able to run anything in the editor and change the buffer text was heavily inspired by emacs's lisp expressions (eval-last-sexp), (eval-defun) and (eval-expression). This plugin is intended to be a drop-in replacement for the antiquated Shell Process plugin" />
      <item value="mall plugin for formatting text blocks that represents a table delimited by pipe (|). For example, can be used to format JBehave examples table. Supported delimiters: pipe, comma, tab. When formatting, any of supported delimiters are replaced with pipe. Usage Select text in the editor or place caret inside a table and choose action &quot;Pipe Table&quot; -&gt; &quot;Format&quot; in Code menu or in editor popup menu." />
      <item value="topic where the message will be published value (optional): message value. Must be type bytes, or be serializable to bytes via configured value_serializer. If value is None, key is required and message acts as a 'delete'. See kafka compaction documentation for more details: https://kafka.apache.org/documentation.html#compaction (compaction requires kafka &gt;= 0.8.1) partition (int, optional): optionally specify a partitio" />
      <item value="stopwaitsecs" />
      <item value="&quot;&quot;&quot;Returns an iterator equivalent to map(fn, iter). Args: fn: A callable that will take as many arguments as there are passed iterables. timeout: The maximum number of seconds to wait. If None, then there is no limit on the wait time. chunksize: If greater than one, the iterables will be chopped into chunks of size chunksize and submitted to the process pool. If set to one, the items in the list will be sent one at a time. Returns: An iterator equivalent to: map(func, *iterables) but the calls may be evaluated out-of-order. Raises: TimeoutError: If the entire result iterator could not be generated before the given timeout. Exception: If fn(*args) raises for any values. &quot;&quot;&quot;" />
      <item value="wait" />
      <item value="nginx: [warn] the &quot;user&quot; directive makes sense only if the master process runs with super-user privileges, ignored in /usr/local/nginx/conf/nginx.conf:1 " />
      <item value="*4765 open() &quot;/usr/local/nginx/client_body_temp/0000001090&quot; failed (13: Permission denied), client: 192.168.125.68, server: 192.168.129.17, request: &quot;POST /douyinphone/insert HTTP/1.1&quot;, host: &quot;192.168.129.17:7171&quot; " />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="563" />
        <entry key="ENGLISH" value="563" />
        <entry key="DANISH" value="2" />
        <entry key="GERMAN" value="2" />
        <entry key="FRENCH" value="2" />
        <entry key="HAITIAN_CREOLE" value="3" />
        <entry key="CORSICAN" value="1" />
        <entry key="ROMANIAN" value="2" />
        <entry key="PORTUGUESE" value="2" />
        <entry key="SWEDISH" value="6" />
        <entry key="TELUGU" value="1" />
        <entry key="TURKISH" value="1" />
        <entry key="SPANISH" value="3" />
        <entry key="HUNGARIAN" value="1" />
        <entry key="ITALIAN" value="4" />
        <entry key="HINDI" value="3" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="baiduTranslateSettings">
      <app-key>
        <option name="appId" value="20180726000189099" />
        <option name="appKeyConfigured" value="true" />
      </app-key>
    </option>
    <option name="googleTranslateSettings">
      <google-translate>
        <option name="useTranslateGoogleCom" value="true" />
      </google-translate>
    </option>
    <option name="ignoreRegExp" value="" />
    <option name="translator" value="fanyi.baidu" />
  </component>
</application>