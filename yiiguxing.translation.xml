<application>
  <component name="AppStorage">
    <histories>
      <item value="he gateway to the Distutils: do everything your setup script needs to do, in a highly flexible and user-driven way. Briefly: create a Distribution instance; find and parse config files; parse the command line; run each Distutils command found there, customized by the options supplied to 'setup()' (as keyword arguments), in config files, and on the command line. The Distribution instance might be an instance of a class supplied via the 'distclass' keyword argument to 'setup'; if no such class is supplied, then the Distribution class (in dist.py) is instantiated. All other arguments to 'setup' (except for 'cmdclass') are used to set attributes of the Distribution instance. The 'cmdclass' argument, if supplied, is a dictionary mapping command names to command classes. Each command encountered on the command line will be turned into a command class, which is in turn instantiated; any class found in 'cmdclass' is used in place of the default, which is (for command 'foo_bar') class 'foo_bar' in module 'distutils.command.foo_bar'. The command class must provide a 'user_options' attribute which is a list of option specifiers for 'distutils.fancy_getopt'. Any command-line options between the current and the next command are used to set attributes of the current command object. When the entire command-line has been successfully parsed, calls the 'run()' method on each command object in turn. This method will be driven entirely by the Distribution object (which each command object has a reference to, thanks to its constructor), and the command-specific options that became attributes of each command" />
      <item value="Finished processing dependencies for python-utils==0.1 " />
      <item value="  Could not find a version that satisfies the requirement setup.py (from versions: ) No matching distribution found for setup.py " />
      <item value="IsADirectoryError: [Errno 21] Is a directory:" />
      <item value="TypeError: the JSON object must be str, bytes or bytearray, not list" />
      <item value="登录" />
      <item value="init classifier or" />
      <item value="update" />
      <item value="placefinder" />
      <item value="terminate" />
      <item value="process" />
      <item value="harmful degree formula" />
      <item value="harmful degree" />
      <item value="Mconf" />
      <item value="place" />
      <item value="pf" />
      <item value="CommandError: App 'Schedulings' does not have migrations. " />
      <item value="Args: pkg_name (str): package name activity (str): app activity stop (bool): Stop app before starting the activity. (require activity)" />
      <item value="If ``number`` is None, returns a random member of set ``name``. If ``number`` is supplied, returns a list of ``number`` random memebers of set ``name``. Note this is only available when running Redis 2.6+." />
      <item value="srandmember" />
      <item value="recent" />
      <item value="原创" />
      <item value="ori" />
      <item value="scope" />
      <item value="full" />
      <item value="mode" />
      <item value="afp interface" />
      <item value="chinaaid interface" />
      <item value="reuters interface" />
      <item value="washingtonpost interface" />
      <item value="washingtonpost spider" />
      <item value="内容" />
      <item value="内筒" />
      <item value="owner" />
      <item value="reply info" />
      <item value="configparser.NoOptionError: No option 'connect_timeout' in section: '__config__'" />
      <item value="替换" />
      <item value="resplonse" />
      <item value="TypeError: 'NoneType' object is not callable" />
      <item value="redis.exceptions.ResponseError: NOAUTH Authentication required." />
      <item value="普通的" />
      <item value="SCOPE" />
      <item value="stats" />
      <item value="tasks" />
      <item value="follow" />
      <item value="fans" />
      <item value="joindate" />
      <item value="constellation" />
      <item value="Nomal" />
      <item value="mal" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="110" />
        <entry key="ENGLISH" value="111" />
        <entry key="FRENCH" value="1" />
        <entry key="HAITIAN_CREOLE" value="3" />
        <entry key="ROMANIAN" value="2" />
        <entry key="SWEDISH" value="4" />
        <entry key="TELUGU" value="1" />
        <entry key="TURKISH" value="1" />
        <entry key="HINDI" value="2" />
      </map>
    </option>
  </component>
</application>